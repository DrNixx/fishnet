name: Build

on: [push, pull_request]

jobs:
  linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - uses: docker/build-push-action@v5
        id: docker_build_amd64
        with:
          context: .
          platforms: amd64
          cache-from: type=gha
          cache-to: type=gha
          load: true
      - uses: docker/build-push-action@v5
        id: docker_build_arm64
        with:
          context: .
          platforms: arm64
          cache-from: type=gha
          cache-to: type=gha
          load: true
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: github.event_name == 'push'
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/fishnet
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.licenses=GPL-3.0-or-later
        if: github.event_name == 'push'
      - uses: docker/build-push-action@v5
        id: docker_push
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        if: github.event_name == 'push'
      - run: docker cp "$(docker create ${{ steps.docker_build_amd64.outputs.imageid }}):/fishnet" fishnet-x86_64-unknown-linux-musl
      - run: docker cp "$(docker create ${{ steps.docker_build_arm64.outputs.imageid }}):/fishnet" fishnet-aarch64-unknown-linux-musl
      - uses: actions/upload-artifact@v4
        with:
          name: fishnet-x86_64-unknown-linux-musl
          path: fishnet-x86_64-unknown-linux-musl
      - uses: actions/upload-artifact@v4
        with:
          name: fishnet-aarch64-unknown-linux-musl
          path: fishnet-aarch64-unknown-linux-musl
  windows-x86-64:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-rust mingw-w64-x86_64-make tar
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/checkout@v4
        with:
          repository: lichess-org/intel-sde
          ssh-key: ${{ secrets.ID_RSA_INTEL_SDE }}
          ref: main
          path: intel-sde
        id: sde
        continue-on-error: true
      - run: tar xf intel-sde/sde-external-9.0.0-2021-11-07-win.tar.xz && echo SDE_PATH=$(cygpath -u $GITHUB_WORKSPACE)/sde-external-9.0.0-2021-11-07-win/sde.exe | tee $GITHUB_ENV
        if: steps.sde.outcome == 'success'
      - run: cargo install --force cargo-auditable
      - run: cargo auditable build --release --target x86_64-pc-windows-gnu -vv
      - run: mv target/x86_64-pc-windows-gnu/release/fishnet.exe fishnet-x86_64-pc-windows-gnu.exe
      - uses: actions/upload-artifact@v4
        with:
          name: fishnet-x86_64-pc-windows-gnu
          path: fishnet-x86_64-pc-windows-gnu.exe
  macos-x86-64:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install --force cargo-auditable
      - run: cargo auditable build --release -vv
      - run: mv target/release/fishnet fishnet-x86_64-apple-darwin
      - uses: actions/upload-artifact@v4
        with:
          name: fishnet-x86_64-apple-darwin
          path: fishnet-x86_64-apple-darwin
  macos-aarch64:
    runs-on: macos-11.0
    env:
      CXXFLAGS: -target arm64-apple-macos11
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin
      - run: cargo install --force cargo-auditable
      - run: cargo auditable build --release --target aarch64-apple-darwin -vv
      - run: mv target/aarch64-apple-darwin/release/fishnet fishnet-aarch64-apple-darwin
      - uses: actions/upload-artifact@v4
        with:
          name: fishnet-aarch64-apple-darwin
          path: fishnet-aarch64-apple-darwin
  release:
    runs-on: ubuntu-latest
    needs:
      - linux
      - windows-x86-64
      - macos-x86-64
      - macos-aarch64
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        id: get_version
      - uses: actions/download-artifact@v4
      - run: |
          mkdir upload
          mv fishnet-x86_64-unknown-linux-musl/fishnet-x86_64-unknown-linux-musl   upload/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-unknown-linux-musl
          mv fishnet-x86_64-pc-windows-gnu/fishnet-x86_64-pc-windows-gnu.exe       upload/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-pc-windows-gnu.exe
          mv fishnet-x86_64-apple-darwin/fishnet-x86_64-apple-darwin               upload/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-apple-darwin
          mv fishnet-aarch64-unknown-linux-musl/fishnet-aarch64-unknown-linux-musl upload/fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-unknown-linux-musl
          mv fishnet-aarch64-apple-darwin/fishnet-aarch64-apple-darwin             upload/fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-apple-darwin
          sha256sum upload/*
      - uses: shallwefootball/s3-upload-action@bcd7c2408245fd6cd19b5512a473b1a7a8b48a35
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: fishnet-releases
          source_dir: upload
          destination_dir: ${{ steps.get_version.outputs.VERSION }}
        id: upload_s3
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: fishnet ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: false
          body: |
            Downloads:

            * [fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-unknown-linux-musl](https://fishnet-releases.s3.dualstack.eu-west-3.amazonaws.com/${{ steps.get_version.outputs.VERSION }}/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-unknown-linux-musl)
            * [fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-pc-windows-gnu.exe](https://fishnet-releases.s3.dualstack.eu-west-3.amazonaws.com/${{ steps.get_version.outputs.VERSION }}/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-pc-windows-gnu.exe)
            * [fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-apple-darwin](https://fishnet-releases.s3.dualstack.eu-west-3.amazonaws.com/${{ steps.get_version.outputs.VERSION }}/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-apple-darwin)
            * [fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-unknown-linux-musl](https://fishnet-releases.s3.dualstack.eu-west-3.amazonaws.com/${{ steps.get_version.outputs.VERSION }}/fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-unknown-linux-musl)
            * [fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-apple-darwin](https://fishnet-releases.s3.dualstack.eu-west-3.amazonaws.com/${{ steps.get_version.outputs.VERSION }}/fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-apple-darwin)
        id: create_release
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: upload/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-unknown-linux-musl
          asset_name: fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-unknown-linux-musl
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: upload/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-pc-windows-gnu.exe
          asset_name: fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-pc-windows-gnu.exe
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: upload/fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-apple-darwin
          asset_name: fishnet-${{ steps.get_version.outputs.VERSION }}-x86_64-apple-darwin
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: upload/fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-unknown-linux-musl
          asset_name: fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-unknown-linux-musl
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: upload/fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-apple-darwin
          asset_name: fishnet-${{ steps.get_version.outputs.VERSION }}-aarch64-apple-darwin
          asset_content_type: application/octet-stream
